# See docs/examples here:
# http://doc.gitlab.com/ce/ci/quick_start/README.html
# http://doc.gitlab.com/ce/ci/yaml/README.html

# GitLab CI template for Go tests. Note this installs
# a new working copy of Go (1.5.2 in this case) 
# in a non-standard path such that sudo/root is not 
# needed for the install stage.

# note that this particular install-environment stage
# is overly verbose in order to debug anything tricky
# or weird in your environment - feel free to trim it 
# down as needed

variables:
  DOCKER_VERSION: 17.03.0-ce
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  METRICSAPP_VERSION: '1.0'
  CONTAINER_COMMIT_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$METRICSAPP_VERSION
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  LOCAL_IMAGE: $CI_PROJECT_NAMESPACE_$CI_PROJECT_PATH:$CI_COMMIT_SHA
  CLAIR_ADDR: https://clair.udd.bogops.io
  CLAIR_THRESHOLD: '0'
  KLAR_IMAGE: udyrfrykte/klar:v1.2.1
  PYTHON3_IMAGE: python
  CLAIRCTL_IMAGE: beenanner/clairctl
  CORP_REGISTRY: registry.udd.bogops.io

stages:
- build
- package
- local test
- deploy
- k8s test
- promote

Build Go App:
  image: golang:1.8
  stage: build
  script:
  - ln -nfs "$PWD" /go/src/app
  - cd /go/src/app
  - make
  artifacts:
    untracked: true

Package Docker Image:
  stage: package
  image: docker:$DOCKER_VERSION
  services:
    - docker:$DOCKER_VERSION-dind
  dependencies:
  - Build Go App
  script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker login -u $DEV_BOT_LOGIN -p $DEV_BOT_PASS $CORP_REGISTRY
  - export DOCKER_CONTENT_TRUST=1
  - docker build --pull --build-arg COMMIT=$CI_COMMIT_SHA -t $LOCAL_IMAGE .
  - export DOCKER_CONTENT_TRUST=0
  - docker tag $LOCAL_IMAGE $CONTAINER_COMMIT_IMAGE
  - docker push $CONTAINER_COMMIT_IMAGE

Analyse - klar:
  stage: local test
  image: $KLAR_IMAGE
  script:
    - export DOCKER_USER='gitlab-ci-token'
    - export DOCKER_PASSWORD="$CI_JOB_TOKEN"
    - klar $CONTAINER_COMMIT_IMAGE > report.txt
  artifacts:
    paths:
      - report.txt

Analyse - clairctl:
  stage: local test
  image: $CLAIRCTL_IMAGE
  script:
  - bash -x $CI_PROJECT_DIR/gitlab-ci-scripts/clairctlwrapper.sh $CONTAINER_COMMIT_IMAGE
  artifacts:
    when: always
    paths:
      - reports/html

Local test BATS:
  image: dduportal/bats:0.4.0
  stage: local test
  services:
  - $CONTAINER_COMMIT_IMAGE
  script:
  - $CI_PROJECT_DIR/gitlab-ci-scripts/test_bats.sh

Deploy On K8s Cluster:
  stage: deploy
  image: lachlanevenson/k8s-kubectl
  environment:
    name: metrics-app-dev-$CI_COMMIT_REF_NAME
    on_stop: Undeploy On K8s Cluster
    url: http://metrics-app-dev-$CI_COMMIT_REF_NAME.k8s.bogops.io/version
  script:
    - apk update && apk add openssl
    - kubectl cluster-info
    - ash -x $CI_PROJECT_DIR/gitlab-ci-scripts/deploy.sh

Undeploy On K8s Cluster:
  stage: deploy
  image: lachlanevenson/k8s-kubectl
  environment:
    name: metrics-app-dev-$CI_COMMIT_REF_NAME
    action: stop
  script:
    - kubectl delete all,ing,secrets -l "environment=metrics-app-dev-$CI_COMMIT_REF_NAME" 
  when: manual

K8s test BATS:
  image: dduportal/bats:0.4.0
  stage: k8s test
  services:
  - $CONTAINER_COMMIT_IMAGE
  script:
  - $CI_PROJECT_DIR/gitlab-ci-scripts/test_bats_k8s.sh

Promote Version:
  stage: promote
  image: $PYTHON3_IMAGE
  script:
    - bash -x $CI_PROJECT_DIR/gitlab-ci-scripts/promote.sh
  when: manual
  only:
  - master

