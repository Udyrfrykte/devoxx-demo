# See docs/examples here:
# http://doc.gitlab.com/ce/ci/quick_start/README.html
# http://doc.gitlab.com/ce/ci/yaml/README.html

# GitLab CI template for Go tests. Note this installs
# a new working copy of Go (1.5.2 in this case) 
# in a non-standard path such that sudo/root is not 
# needed for the install stage.

# note that this particular install-environment stage
# is overly verbose in order to debug anything tricky
# or weird in your environment - feel free to trim it 
# down as needed

variables:
  DOCKER_VERSION: 17.03.0-ce
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  METRICSAPP_VERSION: '1.0'
  CONTAINER_COMMIT_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_REF_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$METRICSAPP_VERSION
  CONTAINER_LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  LOCAL_IMAGE: $CI_PROJECT_NAMESPACE_$CI_PROJECT_PATH:$CI_COMMIT_SHA
  CLAIR_ADDR: https://clair.udd.bogops.io
  CLAIR_THRESHOLD: '0'
  KLAR_IMAGE: udyrfrykte/klar:v1.2.1
  PYTHON3_IMAGE: python
  CLAIRCTL_IMAGE: beenanner/clairctl

stages:
- package
- local test
- promote

Package Docker Image:
  stage: package
  image: docker:$DOCKER_VERSION
  services:
    - docker:$DOCKER_VERSION-dind
  script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build --pull --build-arg COMMIT=$CI_COMMIT_SHA -t $LOCAL_IMAGE .
  - docker tag $LOCAL_IMAGE $CONTAINER_COMMIT_IMAGE
  - docker push $CONTAINER_COMMIT_IMAGE

Analyse Docker Image:
  stage: local test
  image: $KLAR_IMAGE
  script:
    - export DOCKER_USER='gitlab-ci-token'
    - export DOCKER_PASSWORD="$CI_JOB_TOKEN"
    - klar $CONTAINER_COMMIT_IMAGE > report.txt
  artifacts:
    paths:
      - report.txt

Analyse Docker Image with clairctl:
  stage: local test
  image: $CLAIRCTL_IMAGE
  script:
  - bash -x $CI_PROJECT_DIR/gitlab-ci-scripts/clairctlwrapper.sh $CONTAINER_COMMIT_IMAGE
  artifacts:
    when: always
    paths:
      - reports/html

Local test:
  image: $CONTAINER_COMMIT_IMAGE
  stage: local test
  script: /bin/ash -c "fgrep -q Alpine /etc/os-release"

Promote Version:
  stage: promote
  image: $PYTHON3_IMAGE
  script:
    - bash -x $CI_PROJECT_DIR/gitlab-ci-scripts/promote.sh
  when: manual

