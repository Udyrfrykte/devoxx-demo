global

# Default SSL material locations
  ca-base /etc/ssl/certs
	crt-base /etc/haproxy/certs

# Default ciphers to use on SSL-enabled listening sockets.
# For more information, see ciphers(1SSL). This list is from:
# https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3
  tune.ssl.default-dh-param 2048

defaults
  mode http
  option httplog
  option dontlognull
# option tcp-check
  timeout connect 5000
  timeout client  50000
  timeout server  50000

#########################
#########################

frontend front_https
	mode http
	bind 0.0.0.0:443 ssl crt /etc/haproxy/certs

{% for service_key, service_value in haproxy_services|dictsort %}
{%   if not service_value.tcp|default(false) %}
  use_backend back_{{ service_key }} if { ssl_fc_sni {{ service_value.public_fqdn }} }{{ ' ' + service_value.additional_acl if service_value.additional_acl is defined else '' }}
{%   endif %}
{% endfor %}

{% for service_key, service_value in haproxy_services|dictsort %}
{%   if service_value.tcp|default(false) %}
frontend front_{{ service_key }}
	mode tcp
  option tcplog
	bind 0.0.0.0:{{ service_value.public_port }}
  use_backend back_{{ service_key }}
{%   endif %}
{% endfor %}

{% for service_key, service_value in haproxy_services|dictsort %}
backend back_{{ service_key }}
  log global
{%   if service_value.tcp|default(false) %}
  mode tcp
{%   else %}
  mode http
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
{%   endif %}
#  server srv_{{ service_key }} {{ service_value.back_fqdn }}:{{ service_value.back_port }} check resolvers docker init-addr last,libc,none
  server srv_{{ service_key }} {{ service_value.back_fqdn }}:{{ service_value.back_port }}
{% endfor %}
